{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/1.png","PublicMint.js","DWTMint.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","presaleCost","mintedTokens","newDwtPrice","error","dataReducer","console","log","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","maxSupply","call","maticPrice","maticPreSalePrice","newDwtMintPrice","connectSuccess","connectFailed","connect","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","networkId","SmartContractObj","SmartContract","on","updateAccount","location","reload","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledSmallButton","ResponsiveWrapper","StyledImg","img","PublicMint","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","mintFee","counterAmount","setCounterAmount","redirectTo","urlInput","href","getData","useEffect","style","backgroundColor","padding","textAlign","fontSize","fontWeight","onClick","e","preventDefault","alt","src","i1","Number","target","rel","disabled","_amount","eth","getGasPrice","then","receipt","mint","send","from","value","gasPrice","parseInt","once","err","alert","message","highGasMint","width","DWTMint","dwtMintFee","dwtMint","App","className","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ce968b3.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  name: \"\",\n  totalSupply: 0,\n  cost: 0,\n  presaleCost: 0,\n  mintedTokens : 0,\n  newDwtPrice : 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        name: action.payload.name,\n        totalSupply: action.payload.totalSupply,\n        cost: action.payload.cost,\n        presaleCost: action.payload.presaleCost,\n        mintedTokens : action.payload.mintedTokens,\n        newDwtPrice : action.payload.newDwtPrice,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = \"DiceWarNFT\";\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.maxSupply()\n        .call();\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.maticPrice()\n        .call();\n      let presaleCost = await store\n        .getState()\n        .blockchain.smartContract.methods.maticPreSalePrice()\n        .call();\n      let mintedTokens = await store\n        .getState()\n        .blockchain.smartContract.methods.mintedTokens()\n        .call();\n      let newDwtPrice = await store\n        .getState()\n        .blockchain.smartContract.methods.newDwtMintPrice()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n          totalSupply,\n          cost,\n          mintedTokens,\n          presaleCost,\n          newDwtPrice\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport SmartContract from \"../../contracts/PNS.json\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        // const NetworkData = await SmartContract.networks[networkId];\n        if (networkId === \"137\") {\n          const SmartContractObj = new Web3EthContract(\n            SmartContract,\n            \"0x868DA9CB3cF4163A415Da5Cd6F8CdcBD9eC0D460\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else if (networkId === \"4\") { //rinkeby contract\n          //dispatch(connectFailed(\"Change network to Polygon.\"));\n          const SmartContractObj = new Web3EthContract(\n            SmartContract,\n            //\"0xc1468aC4B85d6A3b8812802f0E30B4DE9946f044\"\n            \"0x3813bf4Bd924A5ec9F8e264D12cfa76815d8Bb75\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n        } else { //staging contract\n          //dispatch(connectFailed(\"Change network to Polygon.\"));\n          const SmartContractObj = new Web3EthContract(\n            SmartContract,\n            \"0x557d27eB655EB6021496B43E8B697e7F14Ea005b\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--dark-grey);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--white);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--white);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--white);\n  font-size: 12px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/1.418c61a6.png\";","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport i1 from \"./assets/images/1.png\";\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: #ffffff;\n  padding: 10px;\n  font-weight: bold;\n  color: #000000;\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledSmallButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: #ffffff;\n  padding: 10px;\n  font-weight: bold;\n  color: #000000;\n  width: 50px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  width: 200px;\n  height: 200px;\n  @media (min-width: 767px) {\n    width: 350px;\n    height: 350px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nfunction PublicMint() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"Maybe it's your lucky day.\");\n  const [claimingNft, setClaimingNft] = useState(false);\n  //const mintFee = 250;\n  const mintFee = data.cost/ 1000000000000000000;\n\n  const [counterAmount, setCounterAmount] = useState(1);\n  const incNum = () => {\n    if (counterAmount < 20) {\n      setCounterAmount(counterAmount+1);\n    }\n  }\n  const decNum = () => {\n    if (counterAmount > 1) {\n      setCounterAmount(counterAmount-1);\n    }\n  }\n\n  const redirectTo = (urlInput) => {\n    window.location.href = urlInput;\n  };\n\n  const publicNFTs = (_amount) => {\n    if (_amount <= 0) {\n      return;\n    }\n    setFeedback(\"Minting your DiceWarNFT...\");\n    setClaimingNft(true);\n\n    const highGasMint = async() => {\n      await blockchain.web3.eth.getGasPrice()\n      .then((receipt)=>{\n        console.log(receipt)\n        blockchain.smartContract.methods\n        .mint(_amount)\n        .send({\n          from: blockchain.account,\n          value: data.cost * _amount,\n          gasPrice : parseInt(receipt * 1.2 ) \n        })\n        .once(\"error\", (err) => {\n          alert(err.message + \" Page will reload and you can retry connect\");\n          window.location.reload();\n          // setFeedback(\"Sorry, something went wrong please try again later.\");\n          // setClaimingNft(false);\n        })\n        .then((receipt) => {\n          setFeedback(\n            \"WOW, you now own a DiceWarNFT. go visit Opensea.io to view it.\"\n          );\n          setClaimingNft(false);\n          dispatch(fetchData(blockchain.account));\n        });\n      });\n    }\n    highGasMint()\n\n    \n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);// eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <s.Screen style={{ backgroundColor: \"var(--black)\" }}>\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 24 }}>\n        <s.TextTitle\n          style={{ textAlign: \"center\", fontSize: 28, fontWeight: \"bold\" }}\n        >\n          Mint a Public DiceWarNFT\n        </s.TextTitle>\n        <s.SpacerMedium />\n        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n          \n          <StyledButton onClick={(e) => {\n                e.preventDefault();\n                redirectTo('')}}>Public</StyledButton>\n          <StyledButton onClick={(e) => {\n                e.preventDefault();\n                redirectTo('DWTMint')}}>DWTMint</StyledButton>\n        </s.Container>\n        <s.SpacerMedium />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }}>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={i1} />\n            <s.SpacerMedium />\n            <s.TextTitle\n              style={{ textAlign: \"center\", fontSize: 35, fontWeight: \"bold\" }}\n            >\n              {Number(data.mintedTokens) === 0 ? \"Connect to see\" : data.mintedTokens}/1111\n            </s.TextTitle>\n          </s.Container>\n          <s.SpacerMedium />\n          <s.Container\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{ backgroundColor: \"#383838\", padding: 24 }}\n          >\n            {Number(data.mintedTokens) === 1111 ? (\n              <>\n                <s.TextTitle style={{ textAlign: \"center\" }}>\n                  The sale has ended.\n                </s.TextTitle>\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  You can still find DiceWar NFT on{\" \"}\n                  <a\n                    target={\"_blank\"}\n                    rel={\"noreferrer\"}\n                    href={\"https://opensea.io/collection/dicewar\"}\n                  >\n                    Opensea.io\n                  </a>\n                </s.TextDescription>\n              </>\n            ) : (\n              <>\n                <s.TextTitle style={{ textAlign: \"center\" }}>\n                  Each DiceWarNFT costs { mintFee } MATIC.\n                </s.TextTitle>\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  {feedback}\n                </s.TextDescription>\n                <s.SpacerMedium />\n\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription style={{ textAlign: \"center\" }}>\n                      Connect to the Polygon network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription style={{ textAlign: \"center\" }}>\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  \n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    <StyledSmallButton onClick={decNum}> - </StyledSmallButton>\n                    <s.TextTitle style={{padding:\"16px\", fontSize:\"22px\"}}>{counterAmount}</s.TextTitle>\n                    <StyledSmallButton onClick={incNum}> + </StyledSmallButton>\n                <s.SpacerLarge />\n                    <StyledButton\n                      disabled={claimingNft ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        publicNFTs(counterAmount);\n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"BUSY\" : \"MINT\"}\n                    </StyledButton>\n                  </s.Container>\n                )}\n              </>\n            )}\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerSmall />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 9 }}>\n            Please make sure you are connected to the right network (Polygon\n            Mainnet) and the correct address. Please note: Once you make the\n            purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default PublicMint;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport i1 from \"./assets/images/1.png\";\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: #ffffff;\n  padding: 10px;\n  font-weight: bold;\n  color: #000000;\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledSmallButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: #ffffff;\n  padding: 10px;\n  font-weight: bold;\n  color: #000000;\n  width: 50px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  width: 200px;\n  height: 200px;\n  @media (min-width: 767px) {\n    width: 350px;\n    height: 350px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nfunction DWTMint() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"Maybe it's your lucky day.\");\n  const [claimingNft, setClaimingNft] = useState(false);\n  //const mintFee = 225;\n  const dwtMintFee = data.newDwtPrice/ 1000000000000000000;\n\n  const [counterAmount, setCounterAmount] = useState(1);\n  const incNum = () => {\n    if (counterAmount < 20) {\n      setCounterAmount(counterAmount+1);\n    }\n  }\n  const decNum = () => {\n    if (counterAmount > 1) {\n      setCounterAmount(counterAmount-1);\n    }\n  }\n\n  const redirectTo = (urlInput) => {\n    window.location.href = urlInput;\n  };\n\n  const dwtNFTs = (_amount) => {\n    if (_amount <= 0) {\n      return;\n    }\n    setFeedback(\"Minting your DicewarNFT...\");\n    setClaimingNft(true);\n    const highGasMint = async() => {\n      await blockchain.web3.eth.getGasPrice()\n      .then((receipt)=>{\n        console.log(receipt)\n        blockchain.smartContract.methods\n        .dwtMint(_amount)\n        .send({\n          from: blockchain.account,\n          value: 0,\n          gasPrice : parseInt(receipt * 1.2 ) \n        })\n        .once(\"error\", (err) => {\n          alert(err.message + \" Page will reload and you can retry connect\");\n          window.location.reload();\n          // setFeedback(\"Sorry, something went wrong please try again later.\");\n          // setClaimingNft(false);\n        })\n        .then((receipt) => {\n          setFeedback(\n            \"WOW, you now own a DiceWarNFT. go visit Opensea.io to view it.\"\n          );\n          setClaimingNft(false);\n          dispatch(fetchData(blockchain.account));\n        });\n      });\n    }\n    highGasMint()\n\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);// eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <s.Screen style={{ backgroundColor: \"var(--black)\" }}>\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 24 }}>\n        <s.TextTitle\n          style={{ textAlign: \"center\", fontSize: 28, fontWeight: \"bold\" }}\n        >\n          Mint a DiceWarNFT with DiceWarToken!\n        </s.TextTitle>\n        <s.SpacerMedium />\n        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n\n          <StyledButton onClick={(e) => {\n                e.preventDefault();\n                redirectTo('')}}>Public</StyledButton>\n          <StyledButton onClick={(e) => {\n                e.preventDefault();\n                redirectTo('DWTMint')}}>DWTMint</StyledButton>\n        </s.Container>\n        <s.SpacerMedium />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }}>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={i1} />\n            <s.SpacerMedium />\n            <s.TextTitle\n              style={{ textAlign: \"center\", fontSize: 35, fontWeight: \"bold\" }}\n            >\n              {Number(data.mintedTokens) === 0 ? \"Connect to see\" : data.mintedTokens}/1111\n            </s.TextTitle>\n          </s.Container>\n          <s.SpacerMedium />\n          <s.Container\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{ backgroundColor: \"#383838\", padding: 24 }}\n          >\n            {Number(data.totalSupply) === 1111 ? (\n              <>\n                <s.TextTitle style={{ textAlign: \"center\" }}>\n                  The sale has ended.\n                </s.TextTitle>\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  You can still find DiceWarNFT on{\" \"}\n                  <a\n                    target={\"_blank\"}\n                    rel={\"noreferrer\"}\n                    href={\"https://opensea.io/collection/dicewar\"}\n                  >\n                    Opensea.io\n                  </a>\n                </s.TextDescription>\n              </>\n            ) : (\n              <>\n                <s.TextTitle style={{ textAlign: \"center\" }}>\n                  Each DiceWarNFT costs { dwtMintFee } DWT.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  {feedback}\n                </s.TextDescription>\n                <s.SpacerMedium />\n\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription style={{ textAlign: \"center\" }}>\n                      Connect to the Polygon network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription style={{ textAlign: \"center\" }}>\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  \n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    <StyledSmallButton onClick={decNum}> - </StyledSmallButton>\n                    <s.TextTitle style={{padding:\"16px\", fontSize:\"22px\"}}>{counterAmount}</s.TextTitle>\n                    <StyledSmallButton onClick={incNum}> + </StyledSmallButton>\n                <s.SpacerLarge />\n                    <StyledButton\n                      disabled={claimingNft ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dwtNFTs(1);\n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"BUSY\" : \"MINT\"}\n                    </StyledButton>\n                  </s.Container>\n                )}\n              </>\n            )}\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerSmall />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 9 }}>\n            Please make sure you are connected to the right network (Polygon\n            Mainnet) and the correct address. Please note: Once you make the\n            purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default DWTMint;\n","import React from \"react\";\nimport PublicMint from \"./PublicMint\";\nimport DWTMint from \"./DWTMint\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route exact path=\"/DWTMint\" element={<DWTMint />} />\n        <Route exact path=\"/\" element={<PublicMint />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport \"./styles/theme.css\";\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}